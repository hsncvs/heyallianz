{"version":3,"sources":["content/views/featured-grids.scss","content/views/featured-grids.css","../../node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAaA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,mBAAe;MAAf,eAAe;ACZjB;;ADUA;EAII,WAAW;ACVf;;ACqDI;EF/CJ;IAMM,UAAU;ECPd;AACF;;ADAA;EASM,YAAY;ACLlB;;AC2CI;EF/CJ;IAWQ,YAAY;ECFlB;AACF;;ADEQ;EAZR;IAaU,YAAY;ECEpB;AACF;;ADhBA;EAkBM,eAAe;ACErB;;AC2BI;EF/CJ;IAoBQ,eAAe;ECKrB;AACF;;AD1BA;EA0BI,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,mBAAe;MAAf,eAAe;EACf,WAAW;ACIf;;ACeI;EF/CJ;IA8BM,UAAU;ECOd;AACF;;ADtCA;EAiCM,YAAY;ACSlB;;ACKI;EF/CJ;IAmCQ,YAAY;ECYlB;AACF;;ADZQ;EApCR;IAqCU,YAAY;ECgBpB;AACF;;ADtDA;EA0CM,eAAe;ACgBrB;;AD1DA;EA8CI,WAAW;ACgBf;;ACfI;EF/CJ;IAgDM,UAAU;ECmBd;AACF;;ADVA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,mBAAe;MAAf,eAAe;ACajB;;ADfA;EAII,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,mBAAe;MAAf,eAAe;EACf,WAAW;ACef;;ADrBA;EAQM,mBAAc;MAAd,kBAAc;UAAd,cAAc;ACiBpB;;ACpCI;EFWJ;IAUQ,mBAAa;QAAb,iBAAa;YAAb,aAAa;ECoBnB;AACF;;AC1CI;EFWJ;IAaQ,mBAAa;QAAb,iBAAa;YAAb,aAAa;ECuBnB;AACF;;ADrCA;EAiBM,YAAY;ACwBlB;;ACpDI;EFWJ;IAmBQ,YAAY;EC2BlB;AACF;;AD3BQ;EApBR;IAqBU,YAAY;EC+BpB;AACF;;ADrDA;EA0BM,eAAe;AC+BrB;;ACpEI;EFWJ;IA4BQ,eAAe;ECkCrB;AACF;;ADxBA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,mBAAe;MAAf,eAAe;AC2BjB;;AD7BA;EAII,WAAW;AC6Bf;;ACnFI;EFkDJ;IAMM,UAAU;ECgCd;AACF;;ADvCA;EASM,YAAY;ACkClB;;AC7FI;EFkDJ;IAWQ,YAAY;ECqClB;AACF;;ADrCQ;EAZR;IAaU,YAAY;ECyCpB;AACF;;ADvDA;EAkBM,eAAe;ACyCrB;;AC7GI;EFkDJ;IAoBQ,eAAe;EC4CrB;AACF;;ADjEA;EAyBI,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,mBAAe;MAAf,eAAe;EACf,WAAW;AC4Cf;;ACzHI;EFkDJ;IA6BM,UAAU;EC+Cd;AACF;;AD7EA;EAgCM,YAAY;ACiDlB;;ACnII;EFkDJ;IAkCQ,YAAY;ECoDlB;AACF;;ADpDQ;EAnCR;IAoCU,YAAY;ECwDpB;AACF;;AD7FA;EA0CI,WAAW;ACuDf;;ACnJI;EFkDJ;IA4CM,UAAU;EC0Dd;AACF;;ADvGA;EAgDQ,eAAe;AC2DvB;;AD3GA;EAoDM,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,mBAAe;MAAf,eAAe;AC2DrB;;ADhHA;EAuDQ,UAAU;AC6DlB;;ACtKI;EFkDJ;IAyDU,WAAW;ECgEnB;AACF;;AD1HA;EA6DQ,YAAY;ACiEpB;;ADhEQ;EA9DR;IA+DU,YAAY;ECoEpB;AACF;;ADpIA;EAkEU,aAAa;ACsEvB;;AC1LI;EFkDJ;IAoEY,cAAc;ECyExB;AACF;;AD9IA;EAyEQ,iBAAiB;EACjB,gBAAgB;ACyExB;;ACrMI;EFkDJ;IA4EU,iBAAiB;IACjB,oBAAoB;EC4E5B;AACF","file":"featured-grids.css","sourcesContent":["//\n// Dependencies\n//\n@import \"./../../dependencies\";\n\n// Content Grids\n//\n\n\n// ===================\n// Content Grid 1\n// ===================\n\n.content-grid-1 {\n  display: flex;\n  flex-wrap: wrap;\n  > .view-content {\n    width: 100%;\n    @include media-breakpoint-up(lg) {\n      width: 50%;\n    }\n    .teaser {\n      height: 50vh;\n      @include media-breakpoint-up(lg) {\n        height: 60vh;\n        @media screen and (max-height: 700px) {\n          height: 70vh;\n        }\n      }\n    }\n    .teaser__headline {\n      font-size: 2rem;\n      @include media-breakpoint-up(md) {\n        font-size: 3rem;\n      }\n    }\n\n  }\n  > .attachment-after {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    @include media-breakpoint-up(lg) {\n      width: 50%;\n    }\n    .teaser {\n      height: 35vh;\n      @include media-breakpoint-up(lg) {\n        height: 60vh;\n        @media screen and (max-height: 700px) {\n          height: 70vh;\n        }\n      }\n    }\n    .teaser__headline {\n      font-size: 2rem;\n    }\n  }\n  .views-element-container {\n    width: 100%;\n    @include media-breakpoint-up(lg) {\n      width: 50%;\n    }\n  }\n}\n\n\n// ===================\n// Content Grid 2\n// ===================\n\n.content-grid-2 {\n  display: flex;\n  flex-wrap: wrap;\n  > .view-content {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    > div {\n      flex: 0 0 100%;\n      @include media-breakpoint-up(md) {\n        flex: 0 0 50%;\n      }\n      @include media-breakpoint-up(xl) {\n        flex: 0 0 25%;\n      }\n    }\n    .teaser {\n      height: 50vh;\n      @include media-breakpoint-up(lg) {\n        height: 60vh;\n        @media screen and (max-height: 700px) {\n          height: 70vh;\n        }\n      }\n    }\n    .teaser__headline {\n      font-size: 2rem;\n      @include media-breakpoint-up(md) {\n        font-size: 2rem;\n      }\n    }\n  }\n}\n\n\n// ===================\n// Content Grid 3\n// ===================\n\n.content-grid-3 {\n  display: flex;\n  flex-wrap: wrap;\n  > .view-content {\n    width: 100%;\n    @include media-breakpoint-up(lg) {\n      width: 50%;\n    }\n    .teaser {\n      height: 50vh;\n      @include media-breakpoint-up(lg) {\n        height: 60vh;\n        @media screen and (max-height: 700px) {\n          height: 70vh;\n        }\n      }\n    }\n    .teaser__headline {\n      font-size: 2rem;\n      @include media-breakpoint-up(md) {\n        font-size: 3rem;\n      }\n    }\n  }\n  > .attachment-after {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    @include media-breakpoint-up(lg) {\n      width: 50%;\n    }\n    .teaser {\n      height: 35vh;\n      @include media-breakpoint-up(lg) {\n        height: 60vh;\n        @media screen and (max-height: 700px) {\n          height: 70vh;\n        }\n      }\n    }\n  }\n  .views-element-container {\n    width: 100%;\n    @include media-breakpoint-up(lg) {\n      width: 50%;\n    }\n    &:first-child .view-content {\n      .teaser__headline {\n        font-size: 2rem;\n      }\n    }\n    &:last-child .view-content {\n      display: flex;\n      flex-wrap: wrap;\n      > * {\n        width: 50%;\n        @include media-breakpoint-up(lg) {\n          width: 100%;\n        }\n      }\n      .teaser {\n        height: 30vh;\n        @media screen and (max-height: 700px) {\n          height: 35vh;\n        }\n        footer {\n          display: none;\n          @include media-breakpoint-up(md) {\n            display: block;\n          }\n        }\n      }\n      .teaser__headline {\n        font-size: 1.2rem;\n        margin-bottom: 0;\n        @include media-breakpoint-up(md) {\n          font-size: 1.6rem;\n          margin-bottom: .5rem;\n        }\n      }\n    }\n  }\n}\n",".content-grid-1 {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.content-grid-1 > .view-content {\n  width: 100%;\n}\n\n@media (min-width: 992px) {\n  .content-grid-1 > .view-content {\n    width: 50%;\n  }\n}\n\n.content-grid-1 > .view-content .teaser {\n  height: 50vh;\n}\n\n@media (min-width: 992px) {\n  .content-grid-1 > .view-content .teaser {\n    height: 60vh;\n  }\n}\n\n@media screen and (min-width: 992px) and (max-height: 700px) {\n  .content-grid-1 > .view-content .teaser {\n    height: 70vh;\n  }\n}\n\n.content-grid-1 > .view-content .teaser__headline {\n  font-size: 2rem;\n}\n\n@media (min-width: 768px) {\n  .content-grid-1 > .view-content .teaser__headline {\n    font-size: 3rem;\n  }\n}\n\n.content-grid-1 > .attachment-after {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n}\n\n@media (min-width: 992px) {\n  .content-grid-1 > .attachment-after {\n    width: 50%;\n  }\n}\n\n.content-grid-1 > .attachment-after .teaser {\n  height: 35vh;\n}\n\n@media (min-width: 992px) {\n  .content-grid-1 > .attachment-after .teaser {\n    height: 60vh;\n  }\n}\n\n@media screen and (min-width: 992px) and (max-height: 700px) {\n  .content-grid-1 > .attachment-after .teaser {\n    height: 70vh;\n  }\n}\n\n.content-grid-1 > .attachment-after .teaser__headline {\n  font-size: 2rem;\n}\n\n.content-grid-1 .views-element-container {\n  width: 100%;\n}\n\n@media (min-width: 992px) {\n  .content-grid-1 .views-element-container {\n    width: 50%;\n  }\n}\n\n.content-grid-2 {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.content-grid-2 > .view-content {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n}\n\n.content-grid-2 > .view-content > div {\n  flex: 0 0 100%;\n}\n\n@media (min-width: 768px) {\n  .content-grid-2 > .view-content > div {\n    flex: 0 0 50%;\n  }\n}\n\n@media (min-width: 1200px) {\n  .content-grid-2 > .view-content > div {\n    flex: 0 0 25%;\n  }\n}\n\n.content-grid-2 > .view-content .teaser {\n  height: 50vh;\n}\n\n@media (min-width: 992px) {\n  .content-grid-2 > .view-content .teaser {\n    height: 60vh;\n  }\n}\n\n@media screen and (min-width: 992px) and (max-height: 700px) {\n  .content-grid-2 > .view-content .teaser {\n    height: 70vh;\n  }\n}\n\n.content-grid-2 > .view-content .teaser__headline {\n  font-size: 2rem;\n}\n\n@media (min-width: 768px) {\n  .content-grid-2 > .view-content .teaser__headline {\n    font-size: 2rem;\n  }\n}\n\n.content-grid-3 {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.content-grid-3 > .view-content {\n  width: 100%;\n}\n\n@media (min-width: 992px) {\n  .content-grid-3 > .view-content {\n    width: 50%;\n  }\n}\n\n.content-grid-3 > .view-content .teaser {\n  height: 50vh;\n}\n\n@media (min-width: 992px) {\n  .content-grid-3 > .view-content .teaser {\n    height: 60vh;\n  }\n}\n\n@media screen and (min-width: 992px) and (max-height: 700px) {\n  .content-grid-3 > .view-content .teaser {\n    height: 70vh;\n  }\n}\n\n.content-grid-3 > .view-content .teaser__headline {\n  font-size: 2rem;\n}\n\n@media (min-width: 768px) {\n  .content-grid-3 > .view-content .teaser__headline {\n    font-size: 3rem;\n  }\n}\n\n.content-grid-3 > .attachment-after {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n}\n\n@media (min-width: 992px) {\n  .content-grid-3 > .attachment-after {\n    width: 50%;\n  }\n}\n\n.content-grid-3 > .attachment-after .teaser {\n  height: 35vh;\n}\n\n@media (min-width: 992px) {\n  .content-grid-3 > .attachment-after .teaser {\n    height: 60vh;\n  }\n}\n\n@media screen and (min-width: 992px) and (max-height: 700px) {\n  .content-grid-3 > .attachment-after .teaser {\n    height: 70vh;\n  }\n}\n\n.content-grid-3 .views-element-container {\n  width: 100%;\n}\n\n@media (min-width: 992px) {\n  .content-grid-3 .views-element-container {\n    width: 50%;\n  }\n}\n\n.content-grid-3 .views-element-container:first-child .view-content .teaser__headline {\n  font-size: 2rem;\n}\n\n.content-grid-3 .views-element-container:last-child .view-content {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.content-grid-3 .views-element-container:last-child .view-content > * {\n  width: 50%;\n}\n\n@media (min-width: 992px) {\n  .content-grid-3 .views-element-container:last-child .view-content > * {\n    width: 100%;\n  }\n}\n\n.content-grid-3 .views-element-container:last-child .view-content .teaser {\n  height: 30vh;\n}\n\n@media screen and (max-height: 700px) {\n  .content-grid-3 .views-element-container:last-child .view-content .teaser {\n    height: 35vh;\n  }\n}\n\n.content-grid-3 .views-element-container:last-child .view-content .teaser footer {\n  display: none;\n}\n\n@media (min-width: 768px) {\n  .content-grid-3 .views-element-container:last-child .view-content .teaser footer {\n    display: block;\n  }\n}\n\n.content-grid-3 .views-element-container:last-child .view-content .teaser__headline {\n  font-size: 1.2rem;\n  margin-bottom: 0;\n}\n\n@media (min-width: 768px) {\n  .content-grid-3 .views-element-container:last-child .view-content .teaser__headline {\n    font-size: 1.6rem;\n    margin-bottom: .5rem;\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}