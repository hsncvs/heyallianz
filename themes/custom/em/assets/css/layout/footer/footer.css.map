{"version":3,"sources":["layout/footer/footer.scss","layout/footer/footer.css","mixins/_utilities.scss","../../node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AASA;EACE,yBAA6C;EAC7C,eAAe;EACf,+BAAgB;EAChB,kBAAkB;ACRpB;;ADIA;EAMI,WAAW;ACNf;;ADAA;EAQM,WAAW;ACJjB;;ADJA;EAeI,qBAAqB;EACrB,qBAAqB;ACPzB;;ADTA;EAkBM,aAAa;ACLnB;;ADbA;EAyBI,wBAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB;EACvB,qBAAqB;ACRzB;;ADlBA;EA4BM,2BAAoB;EAApB,2BAAoB;EAApB,oBAAoB;EACpB,wBAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB;EACvB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,sBAAsB;EACtB,kBAAkB;EAClB,2EAAmE;EAAnE,mEAAmE;ACNzE;;AD9BA;EAsCQ,eAAe;ACJvB;;ADlCA;EAyCQ,YAAY;ACHpB;;ADtCA;EA4CQ,UAAU;EACV,sBAAsB;EACtB,WAAW;ACFnB;;AD5CA;EAkDM,kBAAkB;EAClB,kBAAkB;ACFxB;;ADjDA;EA0DI,qBAAqB;ACLzB;;ADrDA;EA4DM,gBAAgB;ACHtB;;ADzDA;EERE,qBAAqB;EACrB,sBAAsB;EACtB,qBAAqB;EACrB,sBAAsB;EACtB,gBAAgB;EFwEd,8CAA+B;EAC/B,iDAAkC;ACFtC;;ADnEA;EAwEI,cAAc;EACd,gBAAgB;EAChB,SAAS;EACT,UAAU;ACDd;;AEvBI;EHnDJ;IA6EM,oBAAa;IAAb,oBAAa;IAAb,aAAa;IACb,wBAAuB;QAAvB,qBAAuB;YAAvB,uBAAuB;ECE3B;AACF;;ADjFA;EAkFM,cAAc;EACd,gCAAgC;EAChC,iDAAkC;EAClC,iBAAiB;ACGvB;;AErCI;EHnDJ;IAuFQ,mBAAmB;ECMzB;AACF;;ADGA;EACE,yBAAyB;EACzB,+BAAgB;EAChB,kBAAkB;ACApB;;ADHA;EAKI,+BAAgB;EAChB,0BAA0B;ACE9B","file":"footer.css","sourcesContent":["//\n// Dependencies\n//\n@import \"./../../dependencies\";\n\n\n//\n// Footer Wrapper\n//\n.page-footer__top-wrapper {\n  background-color: darken($gray-blue-900, 10%);\n  padding: 2rem 0;\n  color: rgba(#FFF, .3);\n  text-align: center;\n  a {\n    color: #FFF;\n    &:hover {\n      opacity: .7;\n    }\n  }\n\n  // Logo\n  //\n  .logo {\n    display: inline-block;\n    margin-bottom: 1.5rem;\n    &-dark {\n      display: none;\n    }\n  }\n\n  // Social menu\n  //\n  .social-menu {\n    justify-content: center;\n    margin-bottom: 1.5rem;\n    a {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      width: 40px;\n      height: 40px;\n      margin-right: 15px;\n      border: 2px solid #FFF;\n      border-radius: 50%;\n      transition: background-color .2s ease-in-out, color .2s ease-in-out;\n      &:last-child {\n        margin-right: 0;\n      }\n      svg {\n        margin: auto;\n      }\n      &:hover {\n        opacity: 1;\n        background-color: #FFF;\n        color: #000;\n      }\n    }\n    .social-menu--link-title {\n      margin-left: -10px;\n      margin-right: 15px;\n    }\n  }\n\n  // Footer block style\n  //\n  .block {\n    margin-bottom: 1.5rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  // Menus block style\n  //\n  .block-menu {\n    @include full-width;\n    border-top: 1px solid rgba(#FFF, .2);\n    border-bottom: 1px solid rgba(#FFF, .2);\n  }\n  .block-menu ul {\n    display: block;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    @include media-breakpoint-up(md) {\n      display: flex;\n      justify-content: center;\n    }\n    \n    li a {\n      display: block;\n      padding: 1rem .8rem 1.1rem .8rem;\n      border-bottom: 1px solid rgba(#FFF, .2);\n      line-height: 1rem;\n      @include media-breakpoint-up(md) {\n        border-bottom: none;\n      }\n    }\n  }\n}\n\n\n//\n// Footer bottom wrapper\n//\n.page-footer__bottom-wrapper {\n  background-color: #0a1013;\n  color: rgba(#FFF, .4);\n  text-align: center;\n  a {\n    color: rgba(#FFF, .6);\n    text-decoration: underline;\n  }\n}\n",".page-footer__top-wrapper {\n  background-color: #11171a;\n  padding: 2rem 0;\n  color: rgba(255, 255, 255, 0.3);\n  text-align: center;\n}\n\n.page-footer__top-wrapper a {\n  color: #FFF;\n}\n\n.page-footer__top-wrapper a:hover {\n  opacity: .7;\n}\n\n.page-footer__top-wrapper .logo {\n  display: inline-block;\n  margin-bottom: 1.5rem;\n}\n\n.page-footer__top-wrapper .logo-dark {\n  display: none;\n}\n\n.page-footer__top-wrapper .social-menu {\n  justify-content: center;\n  margin-bottom: 1.5rem;\n}\n\n.page-footer__top-wrapper .social-menu a {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  margin-right: 15px;\n  border: 2px solid #FFF;\n  border-radius: 50%;\n  transition: background-color .2s ease-in-out, color .2s ease-in-out;\n}\n\n.page-footer__top-wrapper .social-menu a:last-child {\n  margin-right: 0;\n}\n\n.page-footer__top-wrapper .social-menu a svg {\n  margin: auto;\n}\n\n.page-footer__top-wrapper .social-menu a:hover {\n  opacity: 1;\n  background-color: #FFF;\n  color: #000;\n}\n\n.page-footer__top-wrapper .social-menu .social-menu--link-title {\n  margin-left: -10px;\n  margin-right: 15px;\n}\n\n.page-footer__top-wrapper .block {\n  margin-bottom: 1.5rem;\n}\n\n.page-footer__top-wrapper .block:last-child {\n  margin-bottom: 0;\n}\n\n.page-footer__top-wrapper .block-menu {\n  margin-left: -9999rem;\n  margin-right: -9999rem;\n  padding-left: 9999rem;\n  padding-right: 9999rem;\n  position: static;\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.page-footer__top-wrapper .block-menu ul {\n  display: block;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n@media (min-width: 768px) {\n  .page-footer__top-wrapper .block-menu ul {\n    display: flex;\n    justify-content: center;\n  }\n}\n\n.page-footer__top-wrapper .block-menu ul li a {\n  display: block;\n  padding: 1rem .8rem 1.1rem .8rem;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  line-height: 1rem;\n}\n\n@media (min-width: 768px) {\n  .page-footer__top-wrapper .block-menu ul li a {\n    border-bottom: none;\n  }\n}\n\n.page-footer__bottom-wrapper {\n  background-color: #0a1013;\n  color: rgba(255, 255, 255, 0.4);\n  text-align: center;\n}\n\n.page-footer__bottom-wrapper a {\n  color: rgba(255, 255, 255, 0.6);\n  text-decoration: underline;\n}\n","@mixin full-width() {\n  margin-left: -9999rem;\n  margin-right: -9999rem;\n  padding-left: 9999rem;\n  padding-right: 9999rem;\n  position: static;\n}\n\n@mixin make-blank-overlay($z-index: 1) {\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: $z-index;\n}\n\n@mixin make-color-overlay($bg-color, $z-index: 1) {\n    @include make-blank-overlay($z-index);\n    background: $bg-color;\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}